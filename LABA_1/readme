Функции и работа с файлами.
В папке “data” имеем данные для функции y= f ( x):
1)
файл “xc.dat” – содержит значения x i
2)
файлы “yc-1.dat”… “yc-9.dat” – содержат значения y i (различные варианты)
Написать следующие функции:
(все функции хранить во внешнем py файле, например, functions.py):
(каждую функцию сопроводить краткой doc-строкой, которая описывает функцию)
1)
чтение файла с данными с помощью open() и np.loadtxt()
входные данные: имя файла и метод, которым фаил будет открыт (open() и np.loadtxt()),по
умолчанию должен выбираться np.loadtxt()
вывод: список или np.array с данными
2)
функция расчета статистических показателей (пока только среднее, максимальное,
минимальное значения для y= f ( x)
входные данные: y (заданная по точкам y= f ( x))
вывод: словарь, содержащий статистические показатели (mean, max, min)
3)
функция расчета производной для y= f ( x ), используем numpy.gradient
входные данные: x, y (заданная по точкам y= f ( x))
вывод: список или np.array со значениями производной
4)
функция расчета определенного интеграла для y= f ( x ), методом прямоугольников.
входные данные: x, y (заданная по точкам y= f ( x))
вывод: число, значение определенного интеграла
5)
запись файла с результатами (например, “out_ yc-1.dat”) через функции open() и write()
Содержание файла:
1)
имя файла из которого брались значения функции, например “yc-1.dat”
2)
статистические показатели: mean, max, min
3)
значения производной: список
4)
значение определенного интеграла
Выполнить обработку всех 9 файлов:
Получить список всех файлов в папке, например один из способов
import os
Dir = '/content/test'
frames = []
for file in os.listdir(Dir):
frames.append(Dir + '/' + file)
